Задание 1

   1. Найдите информацию о том, как в Ubuntu открыть порт 80, 443. Укажите как.

        sudo iptables -A INPUT -p tcp --dport 80 -j ACCEPT
        sudo iptables -A INPUT -p tcp --dport 443 -j ACCEPT

   2. Установить nginx, сконфигурировать свой виртуальный хост, используя порт 80, так, чтобы:
        на запрос клиента с указанным и непустым хидером 'User'. отправлять код 200 с текстом "Hi $user!", где $user - это значение хидера 'User'.
        иначе отправлять код 404 с текстом "Page not found".
   3. Мне прислать конфиг nginx и команду curl, которую выполняете.

        конфиг в файле:
            i-empire.ru

        curl -H "Host: i-empire.ru" -H "User: user1" http://localhost

Задание 2

   1. Найти информацию о том, что такое самоподписанные сертификаты и сгенерировать такой для своего вэб сервера. Написать своими словами, что это такое и как сгенерить.

        Такой сертификат сервер может выдать самому себе (подписываются самостоятельно созданным удостоверяющим центром), но тоже позволяют шифровать передачу данных. Создаются файлы ключа и сертификат, основанный на этом ключе.

   2. Добавить SSL соединение для дефолтного виртуального хоста nginx, используя порт 443. Прикрепить конфиги nginx.

        Добавил в конфиг дефолтного хоста:
            listen 443 ssl default_server;
            listen [::]:443 ssl default_server;
            ssl on;
            ssl_certificate     /etc/ssl/certs/nginx-selfsigned.crt;
            ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

   3. Откройте в браузере страницу хоста и посмотрите, как браузер реагирует на самоподписанные сертификаты. Напишите, что видите.

        http://localhost/ выдаёт сообщение:
            400 Bad Request

        https://localhost/ выдаёт сообщение:
            Warning: Potential Security Risk Ahead

            Firefox detected a potential security threat and did not continue to localhost. If you visit this site, attackers could try to steal information like your passwords, emails, or credit card details.

   4. Мы говорили о необходимости шифровать симметрично. При этом проблем с получением ассиметричных сертификатов нет. Зачем такая сложная схема для установления SSL соединения? Почему бы не шифровать ассиметрично? Своими словами.

        Как я понял, симметричное шифрование быстрее работает и можно использовать более короткие ключи при одинаковой надежности.
